[
  {
    "id": 1,
    "title": "Variables",
    "code": "let name = \"Alice\"; // Block-scoped, can be reassigned\nconst age = 30; // Block-scoped, cannot be reassigned",
    "description": "Use \"let\" for reassignable variables and \"const\" for constants."
  },
  {
    "id": 2,
    "title": "Data Types",
    "code": "let str = \"Hello\"; // Strings are text\nlet num = 42; // Numbers include integers and floats\nlet isTrue = true; // Booleans are true or false\nlet nothing = null; // Null represents intentional emptiness\nlet notDefined; // Undefined means a variable is declared but not assigned\nlet unique = Symbol(\"id\"); // Symbols are unique identifiers\nlet big = 9007199254740991n; // BigInt is for numbers larger than Number can hold\nlet obj = { key: \"value\" }; // Objects store key-value pairs",
    "description": "JavaScript has 8 data types: String, Number, Boolean, Null, Undefined, Symbol, BigInt, and Object."
  },
  {
    "id": 3,
    "title": "Type Coercion",
    "code": "console.log(5 + \"5\"); // \"55\" (number + string)\nconsole.log(5 - \"3\"); // 2 (string converted to number)\nconsole.log(\"5\" == 5); // true (loose equality converts types)\nconsole.log(\"5\" === 5); // false (strict equality checks type)",
    "description": "Loose equality (\"==\") converts types, while strict equality (\"===\") does not."
  },
  {
    "id": 4,
    "title": "Type Conversion",
    "code": "console.log(Number(\"42\")); // 42\nconsole.log(String(42)); // \"42\"\nconsole.log(Boolean(1)); // true\nconsole.log(parseInt(\"42px\")); // 42",
    "description": "Use \"Number()\", \"String()\", and \"Boolean()\" for explicit type conversion."
  },

    {
      "id": 5,
      "title": "Arithmetic Operators",
      "code": "let sum = 5 + 3;  // 8\nlet difference = 5 - 3;  // 2\nlet product = 5 * 3;  // 15\nlet quotient = 10 / 2;  // 5\nlet remainder = 10 % 3;  // 1 (remainder of division)\nlet power = 2 ** 3;  // 8 (2 raised to the power of 3)",
      "description": "Perform calculations like addition, subtraction, multiplication, and division."
    },

    {
      "id": 6,
      "title": "Comparison Operators",
      "code": "console.log(5 > 3);  // true\nconsole.log(5 >= 3);  // true (greater than or equal to)\nconsole.log(3 < 5);  // true\nconsole.log(3 <= 5);  // true (less than or equal to)\nconsole.log(5 === \"5\");  // false (strict equality, checks type too)\nconsole.log(5 == \"5\");  // true (loose equality, converts type)\nconsole.log(5 !== 3);  // true (not equal)",
      "description": "Used to compare values and check equality, inequality, and range."
    },
    {
      "id": 7,
      "title": "Logical Operators",
      "code": "console.log(5 > 3 && 8 > 4);  // true (AND)\nconsole.log(5 > 3 || 2 > 4);  // true (OR)\nconsole.log(!(5 > 3));  // false (NOT)",
      "description": "Used to combine multiple conditions."
    },
    {
      "id": 8,
      "title": "Assignment Operators",
      "code": "let x = 5;  // Assigns 5 to x\nx = 10;  // Reassigns 10 to x (previous value is overwritten)\nx += 3;  // Adds 3 to x (x = x + 3)\nx -= 2;  // Subtracts 2 from x (x = x - 2)\nx *= 4;  // Multiplies x by 4 (x = x * 4)\nx /= 2;  // Divides x by 2 (x = x / 2)\nx %= 3;  // Modulus: x = x % 3\nx **= 2;  // Raises x to the power of 2 (x = x ** 2)",
      "description": "Used to assign values to variables, perform operations on them, and reassign values."
    },
    {
      "id": 9,
      "title": "Conditional (Ternary) Operator",
      "code": "const age = 18;\nconst canVote = (age >= 18) ? 'Yes' : 'No';\nconsole.log(canVote);  // Output: 'Yes'",
      "description": "A shorthand for 'if-else' statements, used for conditional assignments."
    },
    {
      "id": 10,
      "title": "Typeof Operator",
      "code": "const name = 'Alice';\nconsole.log(typeof name);  // Output: 'string'\nconst age = 25;\nconsole.log(typeof age);  // Output: 'number'",
      "description": "Used to check the type of a variable or value."
    },
    {
      "id": 11,
      "title": "Instanceof Operator",
      "code": "const date = new Date();\nconsole.log(date instanceof Date);  // Output: true\nconsole.log(date instanceof Object);  // Output: true\nconsole.log(date instanceof Array);  // Output: false",
      "description": "Checks whether an object is an instance of a specific class or constructor function."
    },
    {
      "id": 12,
      "title": "Destructuring Assignment",
      "code": "const person = { name: 'Alice', age: 25 };\nconst { name, age } = person;\nconsole.log(name);  // Output: 'Alice'\nconsole.log(age);   // Output: 25",
      "description": "Extracts values from objects or arrays and assigns them to variables."
    }













]
